name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-python:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
      - name: Install dependencies
        run: |
          npm ci
      - name: Sync Versions
        run: |
          npm run sync-versions

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install .[dev]
          pip install build

      - name: Lint
        run: |
          python -m ruff .

      - name: Build
        run: |
          python -m build --outdir py-dist/

      # One day we'll have tests ðŸ¥²
      # - name: Test
      #   run: |
      #     python -m pytest

  build-node:
    name: Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: npm
      - name: Install dependencies
        run: |
          npm ci

      - name: Build
        run: |
          npm run build

      # One day we'll have tests ðŸ¥²
      # - name: Test
      #   run: |
      #     npm run test

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build-python, build-node]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      pull-requests: write
      deployments: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: npm
      - name: Install dependencies
        run: |
          npm ci
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install build

      - name: Sync Versions
        run: |
          npm run sync-versions

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          publish: npm run release

      - name: Sync Versions
        run: |
          npm run sync-versions

      - name: Build python
        run: |
          python -m build --outdir py-dist/

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          packages-dir: py-dist/
