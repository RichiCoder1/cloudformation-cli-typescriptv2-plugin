/* tslint:disable */
/* eslint-disable */
/**
 * This file is generated by core-types-suretype on behalf of cloudformation-cli-typescript-plugin, DO NOT EDIT.
 * For more information, see:
 *  - {@link https://github.com/grantila/core-types-suretype}
 *  - {@link https://github.com/aws-cloudformation/cloudformation-cli-typescript-plugin}
 */

import { suretype, v, annotate } from 'suretype';

/** The validation schema for a TypeConfiguration */
export const schemaTypeConfiguration = suretype({
    name: "TypeConfiguration"
}, v.object({}));

export interface TypeConfiguration {
}

/** The validation schema for a Tag */
export const schemaTag = suretype({
    name: "Tag",
    description: "A key-value pair to associate with a resource."
}, v.object({
    key: annotate({
        description: "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
    }, v.string().required()),
    value: annotate({
        description: "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
    }, v.string().required())
}));

/** A key-value pair to associate with a resource. */
export interface Tag {
    /** The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. */
    key: string;
    /** The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. */
    value: string;
}

/** The validation schema for a Memo */
export const schemaMemo = suretype({
    name: "Memo"
}, v.object({
    heading: v.string(),
    body: v.string()
}));

export interface Memo {
    heading?: string;
    body?: string;
}

/** The validation schema for a InitechDateFormat */
export const schemaInitechDateFormat = suretype({
    name: "InitechDateFormat"
}, v.string());

export type InitechDateFormat = string;

/** The validation schema for a ResourceProperties */
export const schemaResourceProperties = suretype({
    name: "ResourceProperties",
    description: "An example resource schema demonstrating some basic constructs and validation rules."
}, v.object({
    TPSCode: annotate({
        description: "A TPS Code is automatically generated on creation and assigned as the unique identifier."
    }, v.string()),
    title: annotate({
        description: "The title of the TPS report is a mandatory element."
    }, v.string().required()),
    coverSheetIncluded: annotate({
        description: "Required for all TPS Reports submitted after 2/19/1999"
    }, v.boolean()),
    dueDate: schemaInitechDateFormat,
    approvalDate: schemaInitechDateFormat,
    memo: schemaMemo,
    secondCopyOfMemo: schemaMemo,
    testCode: v.string().enum("NOT_STARTED", "CANCELLED").required(),
    authors: v.array(v.string()),
    multipliers: v.anyOf([v.array(v.number()), v.null()]),
    tags: annotate({
        description: "An array of key-value pairs to apply to this resource."
    }, v.array(schemaTag))
}));

/** An example resource schema demonstrating some basic constructs and validation rules. */
export interface ResourceProperties {
    /** A TPS Code is automatically generated on creation and assigned as the unique identifier. */
    TPSCode?: string;
    /** The title of the TPS report is a mandatory element. */
    title: string;
    /** Required for all TPS Reports submitted after 2/19/1999 */
    coverSheetIncluded?: boolean;
    dueDate?: InitechDateFormat;
    approvalDate?: InitechDateFormat;
    memo?: Memo;
    secondCopyOfMemo?: Memo;
    testCode: "NOT_STARTED" | "CANCELLED";
    authors?: string[];
    multipliers?: number[] | null;
    /** An array of key-value pairs to apply to this resource. */
    tags?: Tag[];
}
